server:
  port: 8080
# Spring 配置

spring:
  #数据库配置 start
  datasource:
    url: jdbc:mysql://localhost:3306/traveldemo?allowPublicKeyRetrieval=true&useSSL=false&serverTimezone=UTC
    username: root
    password: 123456
    type: com.alibaba.druid.pool.DruidDataSource
    driver-class-name: com.mysql.cj.jdbc.Driver
    # 下面为连接池的补充设置，应用到上面所有数据源中
    # 初始化大小，最小，最大
    initialSize: 1
    minIdle: 3
    maxActive: 20
    # 配置获取连接等待超时的时间
    maxWait: 60000
    # 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
    timeBetweenEvictionRunsMillis: 60000
    # 配置一个连接在池中最小生存的时间，单位是毫秒
    minEvictableIdleTimeMillis: 30000
    validationQuery: select 'x'
    testWhileIdle: true
    testOnBorrow: false
    testOnReturn: false
    # 打开PSCache，并且指定每个连接上PSCache的大小
    poolPreparedStatements: true
    maxPoolPreparedStatementPerConnectionSize: 20
    # 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
    filters: stat,wall,slf4j
    # 通过connectProperties属性来打开mergeSql功能；慢SQL记录
    connectionProperties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000
    # 合并多个DruidDataSource的监控数据
    #useGlobalDataSourceStat: true
    #数据库配置 end
  # 文件上传大小限制
  multipart:
      enabled: true
      max-file-size: 50MB
      max-request-size: 50MB
  # 模板引擎配置
  thymeleaf:
    prefix: classpath:/templates/
    suffix: .html
    # 非规范html
    mode: LEGACYHTML5
    encoding: utf-8
    # 设置模板缓存
    cache: false
  # 静态资源配置
  resources:
    chain:
      strategy:
        content:
          enabled: true
          paths: /**
  # Redis配置
  redis:
    database: 0
    host: localhost
    port: 6379
    timeout: 30000
    jedis:
      pool:
        max-wait: 600
        min-idle: 10
        max-idle: 30
# mybatis配置
mybatis:
  mapper-locations: classpath:/mapper/*.xml
# 控制台输出日志
logging:
  level:
    com.guo.traveldemo.web.mapper: debug
